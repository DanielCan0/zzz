    

import javax.swing.*;
import java.awt.*;


/**
 *
 * @author dany8
 */

public class TresEnRayaCoordenadas extends JFrame {
    private String[][] tablero = new String[3][3]; 
    private String jugadorActual = "X";  
    private String jugadorX, jugadorO; 
    private int movimientos = 0;  

    public TresEnRayaCoordenadas() {
        setTitle("Tres en Raya con Coordenadas");
        setSize(400, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

         
        jugadorX = JOptionPane.showInputDialog(this, "Jugador 1");
        jugadorO = JOptionPane.showInputDialog(this, "Jugador 2");

        iniciarTablero();  
        mostrarTablero();  

        while (true) {
            pedirCoordenadas();  
            mostrarTablero();  

            if (verificarGanador()) {  
                JOptionPane.showMessageDialog(null, "El jugador " + (jugadorActual.equals("X") ? jugadorX : jugadorO) + " ha ganado!");
                reiniciarJuego();
                break;
            } else if (movimientos == 9) {  
                JOptionPane.showMessageDialog(null, "¡Empate!");
                reiniciarJuego();
                break;
            } else {
                cambiarJugador();  
            }
        }
    }

    private void iniciarTablero() {
        for (int Inicio = 0; Inicio < 3; Inicio++) {
            for (int Tablero2 = 0; Tablero2 < 3; Tablero2++) {
                tablero[Inicio][Tablero2] = " "; 
            }
        }
    }

    private void mostrarTablero() {
        StringBuilder sb = new StringBuilder();
        for (int Tablero = 0; Tablero < 3; Tablero++) {
            for (int TTablero = 0; TTablero < 3; TTablero++) {
                sb.append(tablero[Tablero][TTablero]);
                if (TTablero < 2) sb.append("|");
            }
            sb.append("\n");
            if (Tablero < 2) sb.append("-----\n");
        }
        JOptionPane.showMessageDialog(null, sb.toString(), "Tablero Actual", JOptionPane.PLAIN_MESSAGE);
    }

    private void pedirCoordenadas() {
        boolean coordenadaValida = false;
        while (!coordenadaValida) {
            String input = JOptionPane.showInputDialog(this, "Jugador " + (jugadorActual.equals("X") ? jugadorX : jugadorO) + ", ingrese las coordenadas (0-2).(0,2) para colocar " + jugadorActual + ":");
            
            if (input != null && input.matches("[0-2],[0-2]")) {  
                int fila = Integer.parseInt(input.split(",")[0]);
                int columna = Integer.parseInt(input.split(",")[1]);

                if (tablero[fila][columna].equals(" ")) { 
                    tablero[fila][columna] = jugadorActual; 
                    movimientos++;
                    coordenadaValida = true;
                } else {
                    JOptionPane.showMessageDialog(this, "La celda ya está ocupada");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Coordenadas incorrectas. Ingrese valores en el rango 0-2,0-2.");
            }
        }
    }

    private void cambiarJugador() {
        jugadorActual = jugadorActual.equals("X") ? "O" : "X"; 
    }

    private boolean verificarGanador() {
       
        for (int numeroFilas = 0; numeroFilas < 3; numeroFilas++) {
            if (tablero[numeroFilas][0].equals(jugadorActual) && tablero[numeroFilas][1].equals(jugadorActual) && tablero[numeroFilas][2].equals(jugadorActual)) {
                return true;
            }
            if (tablero[0][numeroFilas].equals(jugadorActual) && tablero[1][numeroFilas].equals(jugadorActual) && tablero[2][numeroFilas].equals(jugadorActual)) {
                return true;
            }
        }
        if (tablero[0][0].equals(jugadorActual) && tablero[1][1].equals(jugadorActual) && tablero[2][2].equals(jugadorActual)) {
            return true;
        }
        if (tablero[0][2].equals(jugadorActual) && tablero[1][1].equals(jugadorActual) && tablero[2][0].equals(jugadorActual)) {
            return true;
        }
        return false;
    }

    private void reiniciarJuego() {
        int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea jugar de nuevo?", "Reiniciar Juego", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            iniciarTablero();  
            movimientos = 0;  
            jugadorActual = "X";  
            mostrarTablero(); 
        } else {
            System.exit(0);
        }
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(xoCordenadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(xoCordenadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(xoCordenadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(xoCordenadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TresEnRayaCoordenadas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
